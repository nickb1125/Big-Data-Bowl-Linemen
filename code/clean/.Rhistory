prob <- prob - 0.001
break
}
print(p)
print(prob)
p <- 0
prob <- 0.999
while (p < 0.025) {
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
prob <- prob - 0.001
}
print(p)
print(prob)
p <- 0
prob <- 0.999
while (p < 0.025) {
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
prob <- prob - 0.001
}
print(p)
print(prob)
p <- 0
prob <- 0.999
while (p > 0.025) {
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
prob <- prob - 0.001
}
print(p)
print(prob)
p <- 0
prob <- 0.999
while (p < 0.025) {
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
prob <- prob - 0.001
}
print(p)
print(prob)
p <- 0
prob <- 0.999
i <- 0
while (p < 0.025) {
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
prob <- prob - 0.001
i <- i+1
}
print(i)
print(p)
print(prob)
p <- 0
prob <- 0.999
i <- 0
while (p > 0.025) {
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
prob <- prob - 0.001
i <- i+1
}
print(i)
print(p)
print(prob)
p <- 0
prob <- 0.999
i <- 0
while (p < 0.025) {
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
prob <- prob - 0.001
i <- i+1
}
print(i)
print(p)
print(prob)
seq(0, 5, by = 1)
p <- 0
prob <- 0.999
i <- 0
while (p < 0.025) {
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
prob <- prob - 0.001
i <- i+1
}
print(i)
print(p)
print(prob)
pbinom(5, 6, 0.999)
pbinom(5, 6, 0.998)
p <- 0
prob <- 1
i <- 0
while (p < 0.025) {
prob <- prob - 0.001
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
i <- i+1
}
print(i)
print(p)
print(prob)
lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = 0.999) }) %>% unlist() %>% sum()
pbinom(5, 6, 0.999)
pbinom(6, 6, 0.999)
p <- 0
prob <- 1
i <- 0
while (p < 0.025) {
prob <- prob - 0.001
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
i <- i+1
}
print(i)
print(p)
print(prob)
p <- 0
prob <- 0
i <- 0
while (p < 0.025) {
prob <- prob + 0.001
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = prob) }) %>% unlist() %>% sum()
i <- i+1
}
print(i)
print(p)
print(prob)
lapply(seq(0, 5, by = 1), function(x) { dbinom(x = 5, size = 6, prob = 0.248) }) %>% unlist() %>% sum()
pbinom(5, 6, .248)
p <- 0
prob <- 0
i <- 0
while (p < 0.025) {
prob <- prob + 0.001
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = x, size = 6, prob = prob) }) %>% unlist() %>% sum()
i <- i+1
}
print(i)
print(p)
print(prob)
p <- 0
prob <- 0
i <- 0
while (p < 0.025) {
prob <- prob + 0.001
p <- lapply(seq(0, 5, by = 1), function(x) { dbinom(x = x, size = 6, prob = prob) }) %>% unlist() %>% sum()
i <- i+1
}
print(i)
print(p)
print(prob)
lapply(seq(0, 5, by = 1), function(x) { dbinom(x = x, size = 6, prob = 0.35) }) %>% unlist() %>% sum()
pbinom(1 = 5, size = 6, prob = 0.35) })
pbinom(q = 5, size = 6, prob = 0.35) })
pbinom(q = 5, size = 6, prob = 0.35)
p <- 0
prob <- 0
i <- 0
while (p < 0.025) {
prob <- prob + 0.001
p <- pbinom(x = 5, size = 6, prob = prob)
i <- i+1
}
p <- 0
prob <- 0
i <- 0
while (p < 0.025) {
prob <- prob + 0.001
p <- pbinom(q = 5, size = 6, prob = prob)
i <- i+1
}
print(i)
print(p)
print(prob)
p <- 0
prob <- 1
i <- 0
while (p < 0.025) {
prob <- prob - 0.001
p <- pbinom(q = 5, size = 6, prob = prob)
i <- i+1
}
print(i)
print(p)
print(prob)
p <- 0
prob <- 0
i <- 0
while (p > 0.025) {
prob <- prob + 0.001
p <- pbinom(q = 5, size = 6, prob = prob)
i <- i+1
}
print(i)
print(p)
print(prob)
p <- 0
prob <- 0
i <- 0
while (p < 0.025) {
prob <- prob + 0.001
p <- pbinom(q = 5, size = 6, prob = prob)
i <- i+1
}
print(i)
print(p)
print(prob)
pbinom(q = 5, size = 6, prob = 0.001)
p <- 0
prob <- 1
i <- 0
while (p > 0.025) {
prob <- prob - 0.001
p <- pbinom(q = 5, size = 6, prob = prob)
i <- i+1
}
print(i)
print(p)
print(prob)
p <- 1
prob <- 0
i <- 0
while (p > 0.025) {
prob <- prob + 0.001
p <- pbinom(q = 5, size = 6, prob = prob)
i <- i+1
}
print(i)
print(p)
print(prob)
p <- 1
prob <- 0
i <- 0
while (p > 0.975) {
prob <- prob + 0.001
p <- pbinom(q = 5, size = 6, prob = prob)
i <- i+1
}
print(i)
print(p)
print(prob)
lapply(seq(0, 5, by = 1), function(x) { dbinom(x = x, size = 6, prob = 0.541) }) %>% unlist() %>% sum()
(5/6) + 1.96*sqrt(( (5/6)*(1/6) ) / 6)
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- pbinom(q = 5, size = 6, prob = prob)
df_this <- data.frame(theta = c(prob), p = c(p))
}
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- pbinom(q = 5, size = 6, prob = prob)
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
df
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- pbinom(q = 5, size = 6, prob = prob)
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
df %>% filder(p < 0.025)
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- pbinom(q = 5, size = 6, prob = prob)
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
df %>% filter(p < 0.025)
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- pbinom(q = 5, size = 6, prob = prob)
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
upper <- (df %>% filter(p < 0.025))[1]
lower <- (df %>% filter(p < 0.975))[1]
print(c(upper, lower))
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- pbinom(q = 5, size = 6, prob = prob)
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
upper <- (df %>% filter(p < 0.025))$theta[1]
lower <- (df %>% filter(p < 0.975))$theta[1]
print(c(upper, lower))
binom.test(x = 5, n = 6, p = 0.5)
binom.test(x = 5, n = 6, p = 0.35)
binom.test(x = 5, n = 6, p = 0.35)$p
binom.test(x = 5, n = 6, p = 0.35)$p.value
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- binom.test(x = 5, n = 6, p = 0.35)$p.value
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
upper <- (df %>% filter(p < 0.025))$theta[1]
lower <- (df %>% filter(p < 0.975))$theta[1]
print(c(upper, lower))
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- binom.test(x = 5, n = 6, p = 0.35)$p.value
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
upper <- (df %>% filter(p < 0.025))$theta[1]
lower <- (df %>% filter(p < 0.975))$theta[1]
print(c(upper, lower))
df
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- binom.test(x = 5, n = 6, p = prob)$p.value
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
upper <- (df %>% filter(p < 0.025))$theta[1]
lower <- (df %>% filter(p < 0.975))$theta[1]
print(c(upper, lower))
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- binom.test(x = 5, n = 6, p = prob)$p.value
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
upper <- (df %>% filter(p < 0.025))$theta[1]
lower <- (df %>% filter(p < 0.975))$theta[1]
print(c(upper, lower))
df
binom.test(x = 5, n = 6, p = 0.7)$p.value
df %>% filter(p < 0.025)
df %>% filter(p > 0.025)
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- binom.test(x = 5, n = 6, p = prob)$p.value
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
upper <- (df %>% filter(p > 0.025))$theta[1]
lower <- (df %>% filter(p > 0.975))$theta[1]
print(c(upper, lower))
df
df <- data.frame(matrix(nrow = 0, ncol = 2)) %>% `colnames<-`(c('theta', 'p'))
i <- 0
for (prob in seq(0, 1, by = 0.001)) {
i <- i+1
p <- binom.test(x = 5, n = 6, p = prob)$p.value
df_this <- data.frame(theta = c(prob), p = c(p))
df <- rbind(df, df_this)
}
upper <- (df %>% filter(p > 0.025))$theta[1]
lower <- (df %>% filter(p > 0.975))$theta[1]
print(c(upper, lower))
df %>% filter(p > 0.975)
binom_test(x = 5, n = 6, p = 0.5, alternative = 'two-sided', conf.level= 0.95)
binom.test(x = 5, n = 6, p = 0.5, alternative = 'two-sided', conf.level= 0.95)
binom.test(x = 5, n = 6, p = 0.5, alternative = 'two.sided', conf.level= 0.95)
binom.test(x = 5, n = 6, p = 0.5, alternative = 'two.sided', conf.level= 0.95)
ret <- binom.test(x = 5, n = 6, p = 0.5, alternative = 'two.sided', conf.level= 0.95)
ret <- binom.test(x = 5, n = 6, p = 0.5, alternative = 'two.sided', conf.level= 0.95)
ret$conf.int
ret <- binom.test(x = 0, n = 6, p = 0.5, alternative = 'two.sided', conf.level= 0.95)
ret$conf.int
ret <- binom.test(x = 6, n = 6, p = 0.5, alternative = 'two.sided', conf.level= 0.95)
ret$conf.int
ret <- binom.test(x = 6, n = 6, p = 0.7, alternative = 'two.sided', conf.level= 0.95)
ret$conf.int
ret <- binom.test(x = 6, n = 6, p = 0.7, alternative = 'two.sided', conf.level= 0.95)
ret$conf.int
qbeta(0.025, 0, 7)
qbeta(0.975,, 1, 6)
qbeta(0.975, 1, 6)
qbeta(0.975, 89, 17)
qbeta(0.025, 89, 17)
qbeta(0.025, 89, 17)
qbeta(0.025, 5, 1)
pbinom(q = 5, size = 6, prob = 0.4781762)
pbinom(q = .025, size = 6, prob = 0.4781762)
pbinom(q = 0.4781762, size = 6, prob = 0.025)
qbeta(0.025, 5, 1)
rbeta(n = 1, shape1 = 5, shape2 = 1)
pbinom(q = 5, size = 6, prob = 0.8024813)
pbeta(p=0.1,x=5,n=10-5)
pbeta(q=0.1,x=5,n=10-5)
pbeta(p=0.1,x=5,n=10-5)
qbeta(0.025,5,1)
qbinom(0.025, 1, 5)
qbinom(0.025, 5, 6)
qbinom(0.025, 6, 5/6)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
file_path <- "/Users/nickbachelder/Desktop/Kaggle/Linemen/data/w1_for_plotting"
w1_df <- read.csv(file_path)
# read data
file_path <- "/Users/nickbachelder/Desktop/Kaggle/Linemen/data/w1_for_plotting"
w1_df <- read.csv(file_path)
# Create animated plot for feature distributions over play
w1_df
# Create animated plot for feature distributions over play
w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team))
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team))
plot_df %>% ggplot(aes(x = s_qb)) %>% geom_density(aes(fill = time_after_snap))
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team))
plot_df %>% ggplot(aes(x = s_qb)) + geom_density(aes(fill = time_after_snap))
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team))
plot_df %>% ggplot(aes(x = s_qb)) + geom_density(aes(fill = as.factor(time_after_snap)))
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team))
plot_df %>% ggplot(aes(x = s_qb)) + geom_density(aes(fill = as.factor(time_after_snap), alpha = 0.4))
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team))
plot_df %>% ggplot(aes(x = s_qb)) + geom_density(aes(color = as.factor(time_after_snap))
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team))
plot_df %>% ggplot(aes(x = s_qb)) + geom_density(aes(color = as.factor(time_after_snap)))
w1_df
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team)) %>% filter(time_after_snap %in% c(0, 0.5, 1, 1.5, 2, 2.5, 3))
plot_df %>% ggplot(aes(x = s_qb)) + geom_density(aes(color = as.factor(time_after_snap)))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(gganimate)
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team))
plot_df %>% ggplot(aes(x = s_qb)) + geom_density() + transition_time(as.factor(time_after_snap))
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team))
plot_df %>% ggplot(aes(x = s_qb)) + geom_density() + transition_time(time_after_snap)
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team)) %>% filter(time_after_snap <= 3)
plot_df %>% ggplot(aes(x = s_qb)) + geom_density() + transition_time(time_after_snap)
w1_df
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team)) %>% filter(time_after_snap <= 3)
plot_df %>% ggplot(aes(x = rusher_distance_from_qb_average)) + geom_density() + transition_time(time_after_snap) +
labs(title = "Time After Snap: {rusher_distance_from_qb_average}")
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team)) %>% filter(time_after_snap <= 3)
plot_df %>% ggplot(aes(x = rusher_distance_from_qb_average)) + geom_density() + transition_time(time_after_snap) +
labs(title = "Time After Snap: {time_after_snap}")
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team)) %>% filter(time_after_snap <= 3)
plot_df %>% ggplot(aes(x = rusher_distance_from_qb_average)) + geom_density() + transition_time(time_after_snap) +
labs(title = "Time After Snap: {frame_time}")
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team)) %>% filter(time_after_snap <= 3)
plot_df %>% ggplot(aes(x = rusher_distance_from_qb_average)) + geom_density() + transition_time(time_after_snap) +
labs(title = "Time After Snap: {round(frame_time, 2)}")
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week, disrupt_team)) %>% filter(time_after_snap <= 3)
plot_df %>% ggplot(aes(x = rusher_distance_from_qb_average)) + geom_density(color = 'blue') + transition_time(time_after_snap) +
labs(title = "Time After Snap: {round(frame_time, 2)}")
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3)
plot_df %>% ggplot(aes(x = rusher_distance_from_qb_average)) + geom_density(aes(color = as.factor(disrupt_team))) + transition_time(time_after_snap) +
labs(title = "Time After Snap: {round(frame_time, 2)} Seconds")
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3)
plot_df %>% ggplot(aes(x = rusher_distance_from_qb_average)) + geom_density(aes(fill = as.factor(disrupt_team))) + transition_time(time_after_snap) +
labs(title = "Time After Snap: {round(frame_time, 2)} Seconds")
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3)
plot_df %>% ggplot(aes(x = rusher_distance_from_qb_average)) + geom_density(aes(fill = as.factor(disrupt_team, alpha = 0.3))) + transition_time(time_after_snap) +
labs(title = "Time After Snap: {round(frame_time, 2)} Seconds")
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3)
plot_df %>% ggplot(aes(x = rusher_distance_from_qb_average)) + geom_density(aes(fill = as.factor(disrupt_team), alpha = 0.3)) + transition_time(time_after_snap) +
labs(title = "Time After Snap: {round(frame_time, 2)} Seconds")
# Create plot for feature distributions over play
plot_df <- w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3.5)
plot_df %>% ggplot(aes(x = rusher_distance_from_qb_average)) + geom_density(aes(fill = as.factor(disrupt_team), alpha = 0.3)) + transition_time(time_after_snap) +
labs(title = "Time After Snap: {round(frame_time, 2)} Seconds")
w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3.5)
w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3.5) %>%
pivot_longer(!c(time_after_snap, disrupt_team), values_to = "values", names_to = "variables")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(gganimate)
library(tidyr)
w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3.5) %>%
pivot_longer(!c(time_after_snap, disrupt_team), values_to = "values", names_to = "variables")
w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3.5) %>%
pivot_longer(!c(time_after_snap, disrupt_team), values_to = "values", names_to = "variables") %>%
ggplot(aes(x = variable)) + geom_density(aes(fill = as.factor(disrupt_team), alpha = 0.3))
w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3.5) %>%
pivot_longer(!c(time_after_snap, disrupt_team), values_to = "values", names_to = "variables") %>%
ggplot(aes(x = variables)) + geom_density(aes(fill = as.factor(disrupt_team), alpha = 0.3))
w1_df %>% dplyr::select(-c(X, playId, week)) %>% filter(time_after_snap <= 3.5) %>%
pivot_longer(!c(time_after_snap, disrupt_team), values_to = "values", names_to = "variables") %>%
ggplot(aes(x = variables)) + geom_density(aes(fill = as.factor(disrupt_team), alpha = 0.3)) +
facet_wrap(vars(values), ncol = 3)
